.DEFAULT_GOAL := help


.PHONY: clean help html_coverage requirements test dev prod celery celery-events celerybeat flower

help:
	@echo "Please use \`make <target>' where <target> is one of"
	@echo "  help                                 display this help message"
	@echo "  clean                                delete generated byte code and coverage reports"
	@echo "  dev_migrate                          apply database migrations"
	@echo "  dev_makemigrations                   apply database migrations"
	@echo "  prod_migrate                         apply database migrations"
	@echo "  prod_makemigrations                  apply database migrations"
	@echo "  dev_requirements                     install requirements for local development"
	@echo "  prod_requirements                    install requirements for production"
	@echo "  test_requirements                    install requirements for test"
	@echo "  quality                              run PEP8"
	@echo "  validate                             run tests and quality checks"
	@echo "  test                                 run tests and generate coverage report"
	@echo "  html_coverage                        generate and view HTML coverage report"
	@echo "  pytest                               run pytest"
	@echo "  pytest_html                          run pytest and generate report.html"
	@echo "  celery                               run celery worker"
	@echo "  celerybeat                           run celery beat"
	@echo "  flower                               run celery monitor with web interface"
	@echo "  celery-events                        run celery monitor with ncursor interface"
	@echo ""

dev:
	# gunicorn -w 4 livecast.wsgi -e DJANGO_SETTINGS_MODULE=livecast.settings.dev
	python manage.py runserver --settings=livecast.settings.dev

dev_migrate:
	python manage.py migrate --settings=livecast.settings.dev

dev_makemigrations:
	python manage.py makemigrations --settings=livecast.settings.dev

test: clean
	python manage.py test livecast --settings=livecast.settings.test
	coverage combine
	coverage report

prod:
	gunicorn -w 8 livecast.wsgi -e DJANGO_SETTINGS_MODULE=livecast.settings.prod

prod_migrate:
	python manage.py migrate --settings=livecast.settings.prod

prod_makemigrations:
	python manage.py makemigrations --settings=livecast.settings.prod

clean:
	find . -name '*.pyc' -delete
	coverage erase

html_coverage:
	coverage html
	open coverage_html_report/index.html

requirements: prod_requirements

dev_requirements:
	pip install -r requirements/dev.txt --exists-action w

prod_requirements:
	pip install -r requirements/prod.txt --exists-action w

test_requirements:
	pip install -r requirements/test.txt --exists-action w

quality:
	pycodestyle livecast *.py
	# pylint --rcfile=pylintrc livecast *.py

quality_detail:
	pycodestyle --show-source --show-pep8 livecast *.py

pytest:
	pytest

validate: quality pytest

pytest_html:
	pytest --html=report.html --self-contained-html

celery:
	python manage.py celery worker -c 1 --loglevel=info -E

celerybeat:
	python manage.py celerybeat --pidfile=log/celerybeat.pid --schedule=log/celerybeat-schedule -l info --settings=livecast.settings.dev

celery-events:
	celery -A livecast events

flower:
	celery -A livecast flower
